# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  go: circleci/go@1.11.0


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test-erc4337-bundler:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: shahafn/go-python-node
      - image: ethereum/client-go:v1.14.0
        command: "\
          --miner.gaslimit 12000000 \
          --http \
          --http.api personal,eth,net,web3,debug \
          --allow-insecure-unlock \
          --rpc.allow-unprotected-txs \
          --http.vhosts '*,localhost,host.docker.internal' \
          --http.corsdomain '*' \
          --http.addr '0.0.0.0' \
          --dev \
          --rpc.txfeecap 0 \
          --nodiscover --maxpeers 0 --mine \
          --verbosity 2"
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "curl pdm"
          command: "curl -sSL https://raw.githubusercontent.com/pdm-project/pdm/main/install-pdm.py | python3 -"
      - restore_cache:
          keys:
            - dependency-cache-pdm-{{ checksum "pdm.lock" }}
      - run:
          name: "update-deps"
          command: "pdm run update-deps"
      - run:
          name: "pdm install"
          command: "pdm install"
      - run:
          name: "lint"
          command: "pdm run lint"
      - run:
          name: "clone bundler"
          command: ./scripts/clone-helper main https://github.com/eth-infinitism/bundler.git
      - restore_cache:
          keys:
            - dependency-cache-yarn-{{ checksum "./bundler/yarn.lock" }}
      - run:
          name: "yarn install for bundler"
          working_directory: "./bundler"
          command: yarn install --ignore-engines && yarn preprocess
      - run:
          name: "deploy entry point"
          working_directory: "./bundler"
          command: yarn hardhat-deploy --network localhost
      - run:
          name: "run bundler"
          working_directory: "./bundler"
          command: yarn bundler
          background: true
      - run:
          name: "await bundler"
          working_directory: "./bundler"
          shell: /bin/sh
          command: |
            wget --post-data="{\"method\": \"eth_supportedEntryPoints\"}" --retry-connrefused --waitretry=2 --timeout=60 --tries=30 http://localhost:3000/rpc
      - run:
          name: "pytest"
          command: "pdm run test"
      - save_cache:
          key: dependency-cache-pdm-{{ checksum "pdm.lock" }}
          paths:
            - .venv
      - save_cache:
          key: dependency-cache-yarn-{{ checksum "./bundler/yarn.lock" }}
          paths:
            - ./bundler/node_modules


###################################################
  test-rip7560-bundler:
    docker:
      - image: shahafn/go-python-node
#      - image: shahafn/rip7560-geth
#        command: "\
#          --miner.gaslimit 12000000 \
#          --http \
#          --http.api personal,eth,net,web3,debug \
#          --allow-insecure-unlock \
#          --rpc.allow-unprotected-txs \
#          --http.vhosts '*,localhost,host.docker.internal' \
#          --http.corsdomain '*' \
#          --http.addr '0.0.0.0' \
#          --dev \
#          --rpc.txfeecap 0 \
#          --nodiscover --maxpeers 0 --mine \
#          --verbosity 2"
    steps:
      - checkout
      - run:
          name: "curl pdm"
          command: "curl -sSL https://raw.githubusercontent.com/pdm-project/pdm/main/install-pdm.py | python3 -"
      - restore_cache:
          keys:
            - dependency-cache-pdm-{{ checksum "pdm.lock" }}
      - run:
          name: "update-deps"
          command: "pdm run update-deps"
      - run:
          name: "pdm install"
          command: "pdm install"
      - run:
          name: "lint"
          command: "pdm run lint"

      - run:
          name: "clone go-ethereum from infinitism"
          command: ./scripts/clone-helper RIP-7560-revision-2 https://github.com/eth-infinitism/go-ethereum.git
      - run:
          name: "build go-ethereum"
          working_directory: "./go-ethereum"
          command: make geth
      - run:
          name: "run go-ethereum"
          working_directory: "./go-ethereum"
          command: "\
          ./build/bin/geth \
          --dev \
          --dev.gaslimit \
          30000000 \
          --http \
          --http.api \
          'eth,net,web3,personal,debug' \
          --http.port \
          8545 \
          --rpc.allow-unprotected-txs \
          --config \
          circleciconfig.toml \
          "
          background: true
      - run:
          name: "clone bundler"
          command: ./scripts/clone-helper main https://github.com/eth-infinitism/bundler.git
      - restore_cache:
          keys:
            - dependency-cache-yarn-{{ checksum "./bundler/yarn.lock" }}
      - run:
          name: "yarn install for bundler"
          working_directory: "./bundler"
          command: yarn install --ignore-engines && yarn preprocess
      - run:
          name: "deploy entry point"
          working_directory: "./bundler"
          command: yarn hardhat-deploy --network localhost
      - run:
          name: "run bundler"
          working_directory: "./bundler"
          command: yarn bundler-rip7560
          background: true
      - run:
          name: "await bundler"
          working_directory: "./bundler"
          shell: /bin/sh
          command: |
            wget --post-data="{\"method\": \"eth_supportedEntryPoints\"}" --retry-connrefused --waitretry=2 --timeout=60 --tries=30 http://localhost:3000/rpc
      - run:
          name: "pytest"
          command: "pdm run test-rip7560"
      - save_cache:
          key: dependency-cache-pdm-{{ checksum "pdm.lock" }}
          paths:
            - .venv
      - save_cache:
          key: dependency-cache-yarn-{{ checksum "./bundler/yarn.lock" }}
          paths:
            - ./bundler/node_modules




# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test-bundler-erc4337-workflow:
    jobs:
      - test-erc4337-bundler
  test-bundler-rip7560-workflow:
    jobs:
      - test-rip7560-bundler
